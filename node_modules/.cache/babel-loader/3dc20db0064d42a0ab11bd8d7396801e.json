{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelaziz/Desktop/quran-reccomendor/src/componenets/JuzPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JuzPage = () => {\n  _s();\n\n  const location = useLocation();\n  const [surahs, setSurahs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const number = location.state.number;\n\n  const getJuz = () => {\n    axios({\n      // this page will display the surahs in that juz, but we nees a way to see the api docucmentation. also the buttons on the Juz page dont show\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${number}`\n    }).then(response => {\n      setSurahs(response.data.data.surahs);\n      console.log(\"juz\");\n      console.log(surahs);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getJuz();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this); // this will map out all of the surahs in that juz based on the use state containing those surahs\n};\n\n_s(JuzPage, \"+BrsptO3VFVGqwxvNVC/tBIDncU=\", false, function () {\n  return [useLocation];\n});\n\n_c = JuzPage;\nexport default JuzPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JuzPage\");","map":{"version":3,"names":["React","axios","useState","useEffect","useLocation","JuzPage","location","surahs","setSurahs","loading","setLoading","number","state","getJuz","method","url","then","response","data","console","log","catch","error"],"sources":["/Users/omarabdelaziz/Desktop/quran-reccomendor/src/componenets/JuzPage.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst JuzPage = () => {\n  const location = useLocation();\n  const [surahs, setSurahs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const number = location.state.number;\n  const getJuz = () => {\n    axios({\n      // this page will display the surahs in that juz, but we nees a way to see the api docucmentation. also the buttons on the Juz page dont show\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${number}`,\n    })\n      .then((response) => {\n        setSurahs(response.data.data.surahs);\n        console.log(\"juz\");\n        console.log(surahs);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getJuz();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return <div></div>; // this will map out all of the surahs in that juz based on the use state containing those surahs\n};\n\nexport default JuzPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAMS,MAAM,GAAGL,QAAQ,CAACM,KAAT,CAAeD,MAA9B;;EACA,MAAME,MAAM,GAAG,MAAM;IACnBZ,KAAK,CAAC;MACJ;MACAa,MAAM,EAAE,KAFJ;MAGJC,GAAG,EAAG,mCAAkCJ,MAAO;IAH3C,CAAD,CAAL,CAKGK,IALH,CAKSC,QAAD,IAAc;MAClBT,SAAS,CAACS,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBX,MAApB,CAAT;MACAY,OAAO,CAACC,GAAR,CAAY,KAAZ;MACAD,OAAO,CAACC,GAAR,CAAYb,MAAZ;IACD,CATH,EAUGc,KAVH,CAUUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD,CAZH;EAaD,CAdD;;EAeAnB,SAAS,CAAC,MAAM;IACdU,MAAM;IACNJ,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBS,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA9B;EACD,CAHQ,EAGN,CAACX,OAAD,CAHM,CAAT;EAIA,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAP,CAxBoB,CAwBA;AACrB,CAzBD;;GAAMJ,O;UACaD,W;;;KADbC,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}