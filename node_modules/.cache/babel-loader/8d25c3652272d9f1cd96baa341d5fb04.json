{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [search, setSearch] = useState([]);\n  const [loading, setLoading] = useState(true); // values are not being passed to surahPage in teh /surah navigation\n\n  const [value, setValue] = useState(); // also the language buttons are not working\n\n  const [arabic, setArabic] = useState();\n  const [indexing, setIndexing] = useState([]);\n  const navigate = useNavigate();\n  const [number, setNumber] = useState();\n  const [index, setIndex] = useState();\n\n  const getSearch = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/surah`\n    }).then(response => {\n      if (arabic) {\n        setIndexing(response.data.data.map((surah, i) => ({\n          label: surah.name,\n          index: i\n        })));\n      } else {\n        setIndexing(response.data.data.map((surah, i) => ({\n          label: surah.englishName,\n          index: i\n        })));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const i = () => {\n    setIndex(indexing.map((k, i) => {\n      if (k.surah === value) {\n        return i;\n      }\n    }));\n  };\n\n  useEffect(() => {\n    // i();\n    getSearch();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading, arabic]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setArabic(true);\n      },\n      children: \"Search in Arabic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setArabic(false);\n      },\n      children: \"Search in English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      getItemValue: item => item.label,\n      items: indexing,\n      renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: isHighlighted ? \"lightgray\" : \"white\"\n        },\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this),\n      value: value,\n      onChange: e => setValue(e.target.value),\n      onSelect: val => setValue(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/surah\", {\n        state: {\n          surah: value,\n          number: index\n        }\n      }),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"h1jp9j0u6xfkFMz10+8YhSMVK10=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Autocomplete","useEffect","axios","useNavigate","Search","search","setSearch","loading","setLoading","value","setValue","arabic","setArabic","indexing","setIndexing","navigate","number","setNumber","index","setIndex","getSearch","method","url","then","response","data","map","surah","i","label","name","englishName","catch","error","console","log","k","item","isHighlighted","background","e","target","val","state"],"sources":["/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst Search = () => {\n  const [search, setSearch] = useState([]);\n  const [loading, setLoading] = useState(true); // values are not being passed to surahPage in teh /surah navigation\n  const [value, setValue] = useState(); // also the language buttons are not working\n  const [arabic, setArabic] = useState();\n  const [indexing, setIndexing] = useState([]);\n  const navigate = useNavigate();\n  const [number, setNumber] = useState();\n  const [index, setIndex] = useState();\n  const getSearch = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/surah`,\n    })\n      .then((response) => {\n        if (arabic) {\n          setIndexing(\n            response.data.data.map((surah, i) => ({\n              label: surah.name,\n              index: i,\n            }))\n          );\n        } else {\n          setIndexing(\n            response.data.data.map((surah, i) => ({\n              label: surah.englishName,\n              index: i,\n            }))\n          );\n        }\n      })\n\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  const i = () => {\n    setIndex(\n      indexing.map((k, i) => {\n        if (k.surah === value) {\n          return i;\n        }\n      })\n    );\n  };\n  useEffect(() => {\n    // i();\n    getSearch();\n\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading, arabic]);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setArabic(true);\n        }}\n      >\n        Search in Arabic\n      </button>\n      <button\n        onClick={() => {\n          setArabic(false);\n        }}\n      >\n        Search in English\n      </button>\n\n      <Autocomplete\n        getItemValue={(item) => item.label}\n        items={indexing}\n        renderItem={(item, isHighlighted) => (\n          <div style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}>\n            {item.label}\n          </div>\n        )}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onSelect={(val) => setValue(val)}\n      />\n      {/* {setIndex(\n        indexing.map((k, i) => {\n          if (k.surah === value) {\n            return i;\n          }\n        })\n      )} */}\n      <button\n        onClick={() =>\n          navigate(\"/surah\", { state: { surah: value, number: index } })\n        }\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}