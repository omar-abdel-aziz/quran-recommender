{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Juz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Juz = () => {\n  _s();\n\n  const [juz, setJuz] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getJuz = n => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${n}` // this isnt the real endpoint. how do i map out all 30 juz when i can only get 1 juz at a time?\n\n    }).then(response => {\n      setJuz(response.data.data);\n      console.log(\"juz\");\n      console.log(response.data.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getJuz(3); // getInfo();\n\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Juz\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Juz, \"5BmlgnvHZhPbF7O/fI/Shce6+f4=\");\n\n_c = Juz;\nexport default Juz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Juz\");","map":{"version":3,"names":["React","useState","useEffect","axios","Juz","juz","setJuz","loading","setLoading","getJuz","n","method","url","then","response","data","console","log","catch","error"],"sources":["/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Juz.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nconst Juz = () => {\n  const [juz, setJuz] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getJuz = (n) => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${n}`, // this isnt the real endpoint. how do i map out all 30 juz when i can only get 1 juz at a time?\n    })\n      .then((response) => {\n        setJuz(response.data.data);\n        console.log(\"juz\");\n        console.log(response.data.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getJuz(3);\n    // getInfo();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return <div>Juz</div>;\n};\n\nexport default Juz;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;;EACA,MAAMQ,MAAM,GAAIC,CAAD,IAAO;IACpBP,KAAK,CAAC;MACJQ,MAAM,EAAE,KADJ;MAEJC,GAAG,EAAG,mCAAkCF,CAAE,EAFtC,CAEyC;;IAFzC,CAAD,CAAL,CAIGG,IAJH,CAISC,QAAD,IAAc;MAClBR,MAAM,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAN;MACAC,OAAO,CAACC,GAAR,CAAY,KAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,CAAcA,IAA1B;IACD,CARH,EASGG,KATH,CASUC,KAAD,IAAW;MAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;IACD,CAXH;EAYD,CAbD;;EAcAjB,SAAS,CAAC,MAAM;IACdO,MAAM,CAAC,CAAD,CAAN,CADc,CAEd;;IACAF,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBQ,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA9B;EACD,CAJQ,EAIN,CAACV,OAAD,CAJM,CAAT;EAKA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAvBD;;GAAMH,G;;KAAAA,G;AAyBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}