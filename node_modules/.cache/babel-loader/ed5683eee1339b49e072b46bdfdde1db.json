{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [search, setSearch] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState();\n  const [arabic, setArabic] = useState(false);\n\n  const getSearch = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/surah`\n    }).then(response => {\n      setSearch(response.data.data.map(surah => ({\n        label: surah.name\n      })));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getSearch();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setArabic(true),\n      children: \"Search in Arabic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setArabic(false),\n      children: \"Search in English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      getItemValue: item => item.label,\n      items: search,\n      renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: isHighlighted ? \"lightgray\" : \"white\"\n        },\n        children: item.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this),\n      value: value,\n      onChange: e => value = e.target.value,\n      onSelect: val => setValue(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"eO3ghmWG6/57F5PGNSzPh+z8qK0=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Autocomplete","useEffect","axios","Search","search","setSearch","loading","setLoading","value","setValue","arabic","setArabic","getSearch","method","url","then","response","data","map","surah","label","name","catch","error","console","log","item","isHighlighted","background","e","target","val"],"sources":["/Users/omarabdelaziz/Desktop/quran-reccomendor/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nconst Search = () => {\n  const [search, setSearch] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState();\n  const [arabic, setArabic] = useState(false);\n  const getSearch = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/surah`,\n    })\n      .then((response) => {\n        setSearch(\n          response.data.data.map((surah) => ({\n            label: surah.name,\n          }))\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getSearch();\n    loading ? setLoading(false) : console.log(\"lol\");\n  }, [loading]);\n  return (\n    <div>\n      <button onClick={() => setArabic(true)}>Search in Arabic</button>\n      <button onClick={() => setArabic(false)}>Search in English</button>\n      <Autocomplete\n        getItemValue={(item) => item.label}\n        items={search}\n        renderItem={(item, isHighlighted) => (\n          <div style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}>\n            {item.label}\n          </div>\n        )}\n        value={value}\n        onChange={(e) => (value = e.target.value)}\n        onSelect={(val) => setValue(val)}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;EACA,MAAMa,SAAS,GAAG,MAAM;IACtBV,KAAK,CAAC;MACJW,MAAM,EAAE,KADJ;MAEJC,GAAG,EAAG;IAFF,CAAD,CAAL,CAIGC,IAJH,CAISC,QAAD,IAAc;MAClBX,SAAS,CACPW,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,GAAnB,CAAwBC,KAAD,KAAY;QACjCC,KAAK,EAAED,KAAK,CAACE;MADoB,CAAZ,CAAvB,CADO,CAAT;IAKD,CAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;MAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CAbH;EAcD,CAfD;;EAgBAtB,SAAS,CAAC,MAAM;IACdW,SAAS;IACTN,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBiB,OAAO,CAACC,GAAR,CAAY,KAAZ,CAA9B;EACD,CAHQ,EAGN,CAACnB,OAAD,CAHM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAQ,OAAO,EAAE,MAAMK,SAAS,CAAC,IAAD,CAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD,CAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,YAAD;MACE,YAAY,EAAGe,IAAD,IAAUA,IAAI,CAACN,KAD/B;MAEE,KAAK,EAAEhB,MAFT;MAGE,UAAU,EAAE,CAACsB,IAAD,EAAOC,aAAP,kBACV;QAAK,KAAK,EAAE;UAAEC,UAAU,EAAED,aAAa,GAAG,WAAH,GAAiB;QAA5C,CAAZ;QAAA,UACGD,IAAI,CAACN;MADR;QAAA;QAAA;QAAA;MAAA,QAJJ;MAQE,KAAK,EAAEZ,KART;MASE,QAAQ,EAAGqB,CAAD,IAAQrB,KAAK,GAAGqB,CAAC,CAACC,MAAF,CAAStB,KATrC;MAUE,QAAQ,EAAGuB,GAAD,IAAStB,QAAQ,CAACsB,GAAD;IAV7B;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA3CD;;GAAM5B,M;;KAAAA,M;AA6CN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}