{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdelaziz/Documents/GitHub/quran-recommender/src/componenets/JuzPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SurahButton from \"./SurahButton\";\nimport \"./JuzPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JuzPage = () => {\n  _s();\n\n  const [ayahs, setAyahs] = useState([]);\n  const [translation, setTranslation] = useState([]);\n  const [type, setType] = useState([]);\n  const [englishN, setEnglishN] = useState([]);\n  const [surahs, setSurahs] = useState([]);\n  const [number, setNumber] = useState([]);\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const n = location.state.number;\n\n  const getJuz = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${n}`\n    }).then(response => {\n      setNumber(Object.values(response.data.data.surahs).map(surah => surah.number));\n      setSurahs(Object.values(response.data.data.surahs).map(surah => surah.name));\n      setAyahs(Object.values(response.data.data.surahs).map(surah => surah.numberOfAyahs));\n      setTranslation(Object.values(response.data.data.surahs).map(surah => surah.englishNameTranslation));\n      setEnglishN(Object.values(response.data.data.surahs).map(surah => surah.englishName));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getJuz();\n    loading ? setLoading(false) : /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 35\n    }, this);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jPage\",\n    children: surahs.map((surah, i) => /*#__PURE__*/_jsxDEV(SurahButton, {\n      onClick: () => {\n        navigate(\"/surah\", {\n          state: {\n            surah: surah,\n            number: number[i]\n          }\n        });\n      },\n      surah: surah,\n      type: type[i],\n      eName: englishN[i],\n      translation: translation[i],\n      ayahs: ayahs[i],\n      number: number[i]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this); // this will map out all of the surahs in that juz based on the use state containing those surahs\n};\n\n_s(JuzPage, \"XdrLAc/0UX533dDvChkzn2kIlkg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = JuzPage;\nexport default JuzPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JuzPage\");","map":{"version":3,"names":["React","axios","useState","useEffect","useLocation","useNavigate","SurahButton","JuzPage","ayahs","setAyahs","translation","setTranslation","type","setType","englishN","setEnglishN","surahs","setSurahs","number","setNumber","location","loading","setLoading","navigate","n","state","getJuz","method","url","then","response","Object","values","data","map","surah","name","numberOfAyahs","englishNameTranslation","englishName","catch","error","console","log","i"],"sources":["/Users/omarabdelaziz/Documents/GitHub/quran-recommender/src/componenets/JuzPage.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SurahButton from \"./SurahButton\";\nimport \"./JuzPage.css\";\nconst JuzPage = () => {\n  const [ayahs, setAyahs] = useState([]);\n  const [translation, setTranslation] = useState([]);\n  const [type, setType] = useState([]);\n  const [englishN, setEnglishN] = useState([]);\n  const [surahs, setSurahs] = useState([]);\n  const [number, setNumber] = useState([]);\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const n = location.state.number;\n  const getJuz = () => {\n    axios({\n      method: \"GET\",\n      url: `http://api.alquran.cloud/v1/juz/${n}`,\n    })\n      .then((response) => {\n        setNumber(\n          Object.values(response.data.data.surahs).map((surah) => surah.number)\n        );\n        setSurahs(\n          Object.values(response.data.data.surahs).map((surah) => surah.name)\n        );\n        setAyahs(\n          Object.values(response.data.data.surahs).map(\n            (surah) => surah.numberOfAyahs\n          )\n        );\n        setTranslation(\n          Object.values(response.data.data.surahs).map(\n            (surah) => surah.englishNameTranslation\n          )\n        );\n        setEnglishN(\n          Object.values(response.data.data.surahs).map(\n            (surah) => surah.englishName\n          )\n        );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    getJuz();\n    loading ? setLoading(false) : <text>loading</text>;\n  }, [loading]);\n  return (\n    <div className=\"jPage\">\n      {surahs.map((surah, i) => (\n        <SurahButton\n          onClick={() => {\n            navigate(\"/surah\", { state: { surah: surah, number: number[i] } });\n          }}\n          surah={surah}\n          type={type[i]}\n          eName={englishN[i]}\n          translation={translation[i]}\n          ayahs={ayahs[i]}\n          key={i}\n          number={number[i]}\n        />\n      ))}\n    </div>\n  ); // this will map out all of the surahs in that juz based on the use state containing those surahs\n};\n\nexport default JuzPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}